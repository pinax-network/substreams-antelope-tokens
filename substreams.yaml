specVersion: v0.1.0
package:
  name: antelope_tokens
  version: v0.4.2
  url: https://github.com/pinax-network/substreams-antelope-tokens
  doc: Antelope `eosio.token` based action traces & database operations.

imports:
  entities: https://github.com/streamingfast/substreams-sink-entity-changes/releases/download/v1.3.1/substreams-sink-entity-changes-v1.3.1.spkg
  database_change: https://github.com/streamingfast/substreams-database-change/releases/download/v1.3.1/substreams-database-change-v1.3.1.spkg
  sql: https://github.com/streamingfast/substreams-sink-sql/releases/download/protodefs-v1.0.3/substreams-sink-sql-protodefs-v1.0.3.spkg

binaries:
  default:
    type: wasm/rust-v1
    file: ./target/wasm32-unknown-unknown/release/antelope_tokens.wasm

protobuf:
  files:
    - eosio.token.proto
  importPaths:
    - ./proto/v1

modules:
  - name: map_events
    # initialBlock: 380000000
    kind: map
    inputs:
      - source: sf.antelope.type.v1.Block
    output:
      type: proto:antelope.eosio.token.v1.Events

  - name: store_tokens
    kind: store
    valueType: proto:antelope.eosio.token.v1.Token
    updatePolicy: set
    inputs:
      - map: map_events

  - name: graph_out
    # initialBlock: 380000000
    kind: map
    inputs:
      - store: store_tokens
      - map: map_events
    output:
      type: proto:sf.substreams.sink.entity.v1.EntityChanges

  - name: ch_out
    kind: map
    inputs:
      - map: map_events
    output:
      type: proto:sf.substreams.sink.database.v1.DatabaseChanges

sink:
  module: ch_out
  type: sf.substreams.sink.sql.v1.Service
  config:
    schema: "./schema.sql"
    engine: clickhouse
    postgraphile_frontend:
      enabled: false
    pgweb_frontend:
      enabled: false