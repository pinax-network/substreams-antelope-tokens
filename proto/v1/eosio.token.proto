syntax = "proto3";

package antelope.eosio.token.v1;

import "google/protobuf/timestamp.proto";

message Events {
  repeated Transfer transfers = 1;
  repeated Issue issues = 2;
  repeated Retire retires = 3;
  repeated Create creates = 4;
  repeated BalanceChange balance_changes = 5;
  repeated SupplyChange supply_changes = 6;
}

message Transfer {
  // block information
  google.protobuf.Timestamp timestamp = 1;
  uint64 block_num = 2;
  string block_hash = 3;
  string block_date = 4;

  // trace information
  string trx_id = 5;
  uint32 index = 6; // Action execution_index
  uint32 action_ordinal = 7;
  repeated string authorization = 8; // Vec<PermissionLevel> (ex: ["account@active"])

  // contract & scope
  string contract = 10; // Name (ex: "eosio.token")
  string symcode = 11; // SymbolCode (ex: "EOS")
  string token = 12; // ExtendedSymbol (ex: "4,EOS@eosio.token")

  // data payload
  string from = 13;
  string to = 14;
  string quantity = 15;
  string memo = 16;

  // extras
  uint32 precision = 17;
  int64 amount = 18;
  double value = 19;
}

message Issue {
  // block information
  google.protobuf.Timestamp timestamp = 1;
  uint64 block_num = 2;
  string block_hash = 3;
  string block_date = 4;

  // trace information
  string trx_id = 5;
  uint32 index = 6; // Action execution_index
  uint32 action_ordinal = 7;
  repeated string authorization = 8; // Vec<PermissionLevel> (ex: ["account@active"])

  // contract & scope
  string contract = 10; // Name (ex: "eosio.token")
  string symcode = 11; // SymbolCode (ex: "EOS")
  string token = 12; // ExtendedSymbol (ex: "4,EOS@eosio.token")

  // data payload
  string to = 13;
  string quantity = 14;
  string memo = 15;

  // extras
  uint32 precision = 16;
  int64 amount = 17;
  double value = 18;
}

message Retire {
  // block information
  google.protobuf.Timestamp timestamp = 1;
  uint64 block_num = 2;
  string block_hash = 3;
  string block_date = 4;

  // trace information
  string trx_id = 5;
  uint32 index = 6; // Action execution_index
  uint32 action_ordinal = 7;
  repeated string authorization = 8; // Vec<PermissionLevel> (ex: ["account@active"])

  // contract & scope
  string contract = 10; // Name (ex: "eosio.token")
  string symcode = 11; // SymbolCode (ex: "EOS")
  string token = 12; // ExtendedSymbol (ex: "4,EOS@eosio.token")

  // data payload
  string quantity = 16;
  string memo = 17;

  // extras
  uint32 precision = 18;
  int64 amount = 19;
  double value = 20;
}

message Create {
  // block information
  google.protobuf.Timestamp timestamp = 1;
  uint64 block_num = 2;
  string block_hash = 3;
  string block_date = 4;

  // trace information
  string trx_id = 5;
  uint32 index = 6; // Action execution_index
  uint32 action_ordinal = 7;
  repeated string authorization = 8; // Vec<PermissionLevel> (ex: ["account@active"])

  // contract & scope
  string contract = 10; // Name (ex: "eosio.token")
  string symcode = 11; // SymbolCode (ex: "EOS")
  string token = 12; // ExtendedSymbol (ex: "4,EOS@eosio.token")

  // data payload
  string issuer = 13;
  string maximum_supply = 14;

  // extras
  uint32 precision = 15;
  int64 amount = 16;
  double value = 17;
}

message BalanceChange {
  // block information
  google.protobuf.Timestamp timestamp = 1;
  uint64 block_num = 2;
  string block_hash = 3;
  string block_date = 4;

  // trace information
  string trx_id = 5;
  uint32 action_index = 6; // Action execution_index
  uint32 index = 7; // DbOps index

  // contract & scope
  string contract = 10; // Name (ex: "eosio.token")
  string symcode = 11; // SymbolCode (ex: "EOS")
  string token = 12; // ExtendedSymbol (ex: "4,EOS@eosio.token")

  // DbOps
  string operation = 13; // db_op::Operation

  // data payload
  string account = 14;
  string balance = 15;
  int64 balance_delta = 16;

  // extras
  uint32 precision = 17;
  int64 amount = 18;
  double value = 19;
}

message SupplyChange {
  // block information
  google.protobuf.Timestamp timestamp = 1;
  uint64 block_num = 2;
  string block_hash = 3;
  string block_date = 4;

  // trace information
  string trx_id = 5;
  uint32 action_index = 6; // Action execution_index
  uint32 index = 7; // DbOps index

  // contract & scope
  string contract = 10; // Name (ex: "eosio.token")
  string symcode = 11; // SymbolCode (ex: "EOS")
  string token = 12; // ExtendedSymbol (ex: "4,EOS@eosio.token")

  // DbOps
  string operation = 13; // db_op::Operation

  // data payload
  string issuer = 14;
  string supply = 15;
  int64 supply_delta = 16;
  string max_supply = 17;
  int64 max_supply_delta = 18;

  // extras
  uint32 precision = 19;
  int64 amount = 20;
  double value = 21;
}
